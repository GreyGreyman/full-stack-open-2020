{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","nameFilter","handleNameFilterChange","value","onChange","Person","person","handlePersonDelete","name","number","onClick","Persons","persons","map","key","id","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newPerson","post","delete","updatedPerson","put","Notification","message","state","className","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","notification","setNotification","notificationHelper","setTimeout","useEffect","personServices","filteredPersons","filter","toLowerCase","includes","event","target","existingPerson","preventDefault","some","window","confirm","returnedPerson","concat","personToDelete","console","log","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAUeA,EARA,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,uBAC3B,OACE,mDACqB,2BAAOC,MAAOF,EAAYG,SAAUF,MCG9CG,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,mBAAX,OACX,4BACKD,EAAOE,KADZ,IACmBF,EAAOG,OACtB,4BAAQC,QAAS,kBAAMH,EAAmBD,KAA1C,YCaOK,EAfC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASL,EAAyB,EAAzBA,mBAG1B,OACE,4BACGK,EAAQC,KAAI,SAAAP,GAAM,OACjB,kBAAC,EAAD,CACEQ,IAAKR,EAAOS,GACZT,OAAQA,EACRC,mBAAoBA,SCOfS,EAhBI,SAAC,GAA2E,IAA1EC,EAAyE,EAAzEA,UAAWC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,iBAAkBC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,mBACpE,OACE,0BAAMC,SAAUL,GACd,sCACQ,2BAAOd,MAAOe,EAASd,SAAUe,KAEzC,wCACU,2BAAOhB,MAAOiB,EAAWhB,SAAUiB,KAE7C,6BACE,4BAAQE,KAAK,UAAb,U,gBCZFC,EAAU,eAkBD,EAhBA,WACb,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAevC,EAZA,SAAAC,GACb,OAAOL,IAAMM,KAAKP,EAASM,GAAWH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWnD,EARA,SAAAd,GACb,OAAOU,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BT,KAOrB,EAJA,SAACA,EAAIkB,GAClB,OAAOR,IAAMS,IAAN,UAAaV,EAAb,YAAwBT,GAAMkB,GAAeN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCHjEM,EAXM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC/B,MAAgB,KAAZD,EACK,KAIP,yBAAKE,UAAS,oCAA+BD,IAC1CD,ICsGQG,EArGH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACT5B,EADS,KACA6B,EADA,OAEcD,mBAAS,IAFvB,mBAETtB,EAFS,KAEAwB,EAFA,OAGkBF,mBAAS,IAH3B,mBAGTpB,EAHS,KAGEuB,EAHF,OAIoBH,mBAAS,IAJ7B,mBAITvC,EAJS,KAIG2C,EAJH,OAKwBJ,mBAAS,CAAEJ,QAAS,GAAIC,MAAO,YALvD,mBAKTQ,EALS,KAKKC,EALL,KAOhB,SAASC,EAAmBX,EAASC,GACnCS,EAAgB,CAAEV,UAASC,UAC3BW,YAAW,WAAQF,EAAgB,CAAEV,QAAS,GAAIC,MAAO,cAAgB,KAG3EY,qBAAU,WACRC,IACGvB,MAAK,SAAAf,GACJ6B,EAAW7B,QAEd,IAGH,IAgEMuC,EAAkBvC,EAAQwC,QAAO,SAAA9C,GAAM,OAC3CA,EAAOE,KAAK6C,cAAcC,SAASrD,EAAWoD,kBAGhD,OACE,6BACE,yCACA,kBAAC,EAAiBR,GAClB,kBAAC,EAAW,CAAE5C,aAAYC,uBAbC,SAACqD,GAC9BX,EAAcW,EAAMC,OAAOrD,UAazB,+CACA,kBAAC,EAAe,CAAEc,UA1EJ,SAACsC,GAGjB,IAAIE,EACJ,GAHAF,EAAMG,iBAGF9C,EAAQ+C,MAAK,SAAArD,GAAqC,OAAzBmD,EAAiBnD,EAAeA,EAAOE,OAASU,MAC3E,GAAI0C,OAAOC,QAAP,UAAkBJ,EAAejD,KAAjC,6EAAkH,CACpH,IAAMyB,EAAa,2BAAQwB,GAAR,IAAwBhD,OAAQW,IACnD8B,EACUjB,EAAclB,GAAIkB,GACzBN,MAAK,SAAAE,GACJY,EAAW7B,EAAQC,KAAI,SAAAP,GAAM,OAAIA,EAAOS,KAAOkB,EAAclB,GAAKT,EAASuB,MAC3Ea,EAAW,IACXC,EAAa,IACbI,EAAmB,GAAD,OAAIlB,EAAKrB,KAAT,qCAA0CqB,EAAKpB,QAAU,oBAWnFyC,EALkB,CAChB1C,KAAMU,EACNT,OAAQW,IAKPO,MAAK,SAAAmC,GACJrB,EAAW7B,EAAQmD,OAAOD,IAC1BpB,EAAW,IACXC,EAAa,IACbI,EAAmB,SAAD,OAAUe,EAAetD,MAAQ,eA4CxBU,UAASC,iBAvBjB,SAACoC,GACxBb,EAAWa,EAAMC,OAAOrD,QAsBkCiB,YAAWC,mBAnB5C,SAACkC,GAC1BZ,EAAaY,EAAMC,OAAOrD,UAmBxB,yCACA,kBAAC,EAAD,CAASS,QAASuC,EAAiB5C,mBAzCZ,SAAAyD,GACzBC,QAAQC,IAAR,sBAA2BF,EAAexD,OACtCoD,OAAOC,QAAP,iBAAyBG,EAAexD,KAAxC,OACF0C,EACUc,EAAejD,IACtBY,MAAK,SAAAC,GACJa,EAAW7B,EAAQwC,QAAO,SAAA9C,GAAM,OAAIA,EAAOS,KAAOiD,EAAejD,OACjEgC,EAAmB,WAAD,OAAYiB,EAAexD,MAAQ,cAEtD2D,OAAM,SAAAC,GACL3B,EAAW7B,EAAQwC,QAAO,SAAA9C,GAAM,OAAIA,EAAOS,KAAOiD,EAAejD,OACjEgC,EAAmB,kBAAD,OAAmBiB,EAAexD,KAAlC,6CAAmF,iB,MCvE/G6D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.458f6918.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({nameFilter, handleNameFilterChange}) => {\r\n  return (\r\n    <div>\r\n      Filter shown with: <input value={nameFilter} onChange={handleNameFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Person = ({ person, handlePersonDelete }) => (\r\n    <li>\r\n        {person.name} {person.number}\r\n        <button onClick={() => handlePersonDelete(person)}>delete</button>\r\n    </li>\r\n)\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, handlePersonDelete }) => {\r\n\r\n\r\n  return (\r\n    <ul>\r\n      {persons.map(person =>\r\n        <Person\r\n          key={person.id}\r\n          person={person}\r\n          handlePersonDelete={handlePersonDelete} />\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\n\r\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios';\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n  return axios.post(baseUrl, newPerson).then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n  return axios.put(`${baseUrl}/${id}`, updatedPerson).then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Notification = ({ message, state }) => {\r\n  if (message === '') {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={`notification notification_${state}`}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport personServices from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [nameFilter, setNameFilter] = useState('')\r\n  const [notification, setNotification] = useState({ message: '', state: 'success' })\r\n\r\n  function notificationHelper(message, state) {\r\n    setNotification({ message, state })\r\n    setTimeout(() => { setNotification({ message: '', state: 'success' }) }, 5000)\r\n  }\r\n\r\n  useEffect(() => {\r\n    personServices.getAll()\r\n      .then(persons => {\r\n        setPersons(persons)\r\n      })\r\n  }, [])\r\n\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    let existingPerson\r\n    if (persons.some(person => { existingPerson = person; return person.name === newName })) {\r\n      if (window.confirm(`${existingPerson.name} is already added to the phonebook, replace old number with the new one?`)) {\r\n        const updatedPerson = { ...existingPerson, number: newNumber }\r\n        personServices\r\n          .update(updatedPerson.id, updatedPerson)\r\n          .then(data => {\r\n            setPersons(persons.map(person => person.id !== updatedPerson.id ? person : data))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            notificationHelper(`${data.name}'s old number replaced to ${data.number}`, 'success')\r\n          })\r\n      }\r\n      return\r\n    }\r\n\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n\r\n    personServices\r\n      .create(newPerson)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson))\r\n        setNewName('')\r\n        setNewNumber('')\r\n        notificationHelper(`Added ${returnedPerson.name}`, 'success')\r\n      })\r\n  }\r\n\r\n\r\n  const handlePersonDelete = personToDelete => {\r\n    console.log(`lets delete ${personToDelete.name}`)\r\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\r\n      personServices\r\n        .remove(personToDelete.id)\r\n        .then(response => {\r\n          setPersons(persons.filter(person => person.id !== personToDelete.id))\r\n          notificationHelper(`Deleted ${personToDelete.name}`, 'success')\r\n        })\r\n        .catch(error => {\r\n          setPersons(persons.filter(person => person.id !== personToDelete.id))\r\n          notificationHelper(`Information of ${personToDelete.name} has already been removed from the server`, 'error')\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleNameFilterChange = (event) => {\r\n    setNameFilter(event.target.value)\r\n  }\r\n\r\n\r\n  const filteredPersons = persons.filter(person =>\r\n    person.name.toLowerCase().includes(nameFilter.toLowerCase())\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification {...notification} />\r\n      <Filter {...{ nameFilter, handleNameFilterChange }} />\r\n      <h2>Add new contact</h2>\r\n      <PersonForm {...{ addPerson, newName, handleNameChange, newNumber, handleNumberChange }} />\r\n      <h2>Contacts:</h2>\r\n      <Persons persons={filteredPersons} handlePersonDelete={handlePersonDelete} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}